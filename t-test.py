from scipy import stats
import matplotlib.pyplot as plt
import scipy.stats as stats
from scipy.stats import shapiro
from scipy.stats import normaltest
import statsmodels.api as sm
import numpy as np
import seaborn as sns


def get_stats(data, name):
    data = np.array(data)
    f = plt.figure(1, figsize=(4, 3))
    sns.set_palette("Blues_d")

    sns.histplot(data=data)
    f.savefig(f"hist-{name}.pdf", bbox_inches="tight")

    g = plt.figure(2, figsize=(4, 3))

    g = sm.qqplot(data=data, line="s", fit=True)

    g.savefig(f"qq-{name}.pdf", bbox_inches="tight")

    print(f"Statistics for: {name}")

    stat, p = shapiro(data)
    print("Shapiro Statistics=%.3f, p=%.3f" % (stat, p))

    alpha = 0.05
    if p > alpha:
        print("Sample looks Gaussian (fail to reject H0)")
    else:
        print("Sample does not look Gaussian (reject H0)")

    stat, p = normaltest(data)
    print("Normal Statistics=%.3f, p=%.3f" % (stat, p))

    alpha = 0.05
    if p > alpha:
        print("Sample looks Gaussian (fail to reject H0)")
    else:
        print("Sample does not look Gaussian (reject H0)")

    f.clf()
    g.clf()

    print(f"Average imp: {np.average(data)}")


def imp_nine():

    imp_nine_ind = np.array(
        [39.98, 49.97, 50.56, 50.18, 59.62, 58.74, 51.05, 57.58, 47.59]
    )
    imp_nine_hol = 50.98

    print(stats.ttest_1samp(a=imp_nine_ind, popmean=imp_nine_hol))

    get_stats(imp_nine_ind, "imp_nine")


def poc_175():

    ### PoC

    ## 1.75

    # 2014

    a = [32.91, 41.86, 41.91, 43.64, 50.57, 50.93, 42.99, 48.65, 39.75]

    # 2023

    b = [32.56, 39.92, 40.01, 44.23, 50.65, 50.82, 37.20, 47.76, 36.14]

    print(stats.ttest_rel(a=a, b=b))

    get_stats(a, "poc_q1_2014")
    get_stats(b, "poc_q1_2023")


def poc_224():

    ## 2.24

    # 2014

    a = [39.98, 50.18, 49.97, 50.56, 59.62, 58.74, 51.05, 57.58, 47.59]

    # 2023

    b = [39.98, 48.35, 48.36, 51.32, 59.67, 58.69, 45.02, 56.62, 43.91]

    print(stats.ttest_rel(a=a, b=b))

    get_stats(a, "poc_q2_2014")
    get_stats(b, "poc_q2_2023")


def poc_28():

    ## 2.8

    # 2014

    a = [44.99, 55.89, 55.61, 54.85, 65.47, 63.58, 56.46, 63.45, 53.07]

    # 2023

    b = [45.54, 54.45, 54.39, 55.84, 65.63, 63.75, 50.87, 62.74, 49.77]

    print(stats.ttest_rel(a=a, b=b))

    get_stats(a, "poc_q3_2014")
    get_stats(b, "poc_q3_2023")


def cw_175():

    ### Citywide

    ## 1.75

    a = [
        11.34,
        14.98,
        13.90,
        29.28,
        25.03,
        22.40,
        20.79,
        25.30,
        29.67,
        29.02,
        27.41,
        24.28,
        29.51,
        28.34,
        19.66,
        8.80,
        21.94,
        19.59,
        17.86,
        19.31,
        1.97,
        22.23,
        20.97,
        24.58,
        28.23,
        28.75,
        32.91,
        28.02,
        41.86,
        41.91,
        43.64,
        50.57,
        50.93,
        29.89,
        29.27,
        35.57,
        24.70,
        24.10,
        20.99,
        25.94,
        24.88,
        22.40,
        23.22,
        3.77,
        3.75,
        10.51,
        27.84,
        12.45,
        20.30,
        35.93,
        42.99,
        25.65,
        26.77,
        48.65,
        39.75,
        30.45,
        30.66,
        36.20,
        25.73,
        24.75,
        23.94,
        20.16,
        8.17,
        22.72,
        15.26,
        6.02,
        2.81,
        5.63,
        15.55,
        24.46,
        33.99,
        23.47,
        28.96,
        30.38,
        26.93,
        24.47,
        29.96,
        25.26,
        14.23,
        13.04,
        19.40,
        16.19,
        16.35,
        0.00,
        4.54,
        8.14,
        14.85,
        19.70,
        12.32,
        7.98,
        21.46,
        16.15,
        14.73,
        12.81,
        16.94,
        15.29,
        21.24,
        5.60,
    ]

    b = [
        7.85,
        15.05,
        18.27,
        18.35,
        20.45,
        19.81,
        16.80,
        15.84,
        15.90,
        11.52,
        0.97,
        2.82,
        13.57,
        19.97,
        21.50,
        22.51,
        22.43,
        18.25,
        14.95,
        11.28,
        16.49,
        0.44,
        2.45,
        6.72,
        10.28,
        13.81,
        10.43,
        14.40,
        15.98,
        14.57,
        11.31,
        13.73,
        6.51,
        29.30,
        18.05,
        20.24,
        20.48,
        18.07,
        16.09,
        6.61,
        11.93,
        18.20,
        11.09,
        21.69,
        18.70,
        23.64,
        22.16,
        21.33,
        20.96,
        17.20,
        15.51,
        13.69,
        14.91,
        14.52,
        16.17,
        20.79,
        23.06,
        28.08,
        29.43,
        19.65,
        20.04,
        17.65,
        17.57,
        16.15,
        0.00,
        19.48,
        20.93,
        20.53,
        27.55,
        34.35,
        34.80,
        23.68,
        19.07,
        18.64,
        18.89,
        17.97,
        4.99,
        4.47,
        18.61,
        22.86,
        26.01,
        31.43,
        23.82,
        22.16,
        17.00,
        13.87,
        8.48,
        2.64,
        1.83,
        6.37,
        19.71,
        18.96,
        19.57,
        17.40,
        16.51,
        11.71,
        13.35,
        15.42,
    ]

    print(stats.ttest_rel(a=a, b=b))

    get_stats(a, "cw_q1_2014")
    get_stats(b, "cw_q1_2023")


def cw_224():

    ## 2.24

    a = [
        13.24,
        17.56,
        16.08,
        31.90,
        29.94,
        27.66,
        24.09,
        31.28,
        36.22,
        35.10,
        33.92,
        30.18,
        35.92,
        34.73,
        23.71,
        10.99,
        27.55,
        23.88,
        22.98,
        22.79,
        1.95,
        26.23,
        26.41,
        30.21,
        34.52,
        34.95,
        39.98,
        34.12,
        50.18,
        49.97,
        50.56,
        59.62,
        58.74,
        35.06,
        35.48,
        41.40,
        29.99,
        29.81,
        25.56,
        31.71,
        30.72,
        27.27,
        29.37,
        4.15,
        4.44,
        11.71,
        33.71,
        13.24,
        25.09,
        43.49,
        51.05,
        32.60,
        33.74,
        57.58,
        47.59,
        36.74,
        37.26,
        42.92,
        30.29,
        31.16,
        29.70,
        22.52,
        9.24,
        27.97,
        18.18,
        6.57,
        2.58,
        6.00,
        17.40,
        30.54,
        38.21,
        28.60,
        36.02,
        37.42,
        33.97,
        30.85,
        36.68,
        31.15,
        17.45,
        16.94,
        23.78,
        19.54,
        21.11,
        0.00,
        4.94,
        8.81,
        19.58,
        24.18,
        13.42,
        10.45,
        26.29,
        19.56,
        18.50,
        16.13,
        20.69,
        17.41,
        27.66,
        6.69,
    ]

    b = [
        9.23,
        20.57,
        25.80,
        26.04,
        27.75,
        27.36,
        23.54,
        22.12,
        21.64,
        14.29,
        0.91,
        3.73,
        15.05,
        26.89,
        29.65,
        30.70,
        30.29,
        25.08,
        19.88,
        15.01,
        23.73,
        0.96,
        2.74,
        7.32,
        11.67,
        16.33,
        13.84,
        19.41,
        21.51,
        19.23,
        15.83,
        15.83,
        8.09,
        32.92,
        22.23,
        27.52,
        28.29,
        25.04,
        20.64,
        9.16,
        15.44,
        20.20,
        13.21,
        27.82,
        25.12,
        31.77,
        29.74,
        29.22,
        29.12,
        23.52,
        20.31,
        19.24,
        17.88,
        17.01,
        20.64,
        28.06,
        31.50,
        38.04,
        38.63,
        26.01,
        27.47,
        24.44,
        22.88,
        21.46,
        0.00,
        25.96,
        28.17,
        27.84,
        37.60,
        46.04,
        45.10,
        31.09,
        25.46,
        25.30,
        25.96,
        25.27,
        4.57,
        5.60,
        24.92,
        31.51,
        35.23,
        42.55,
        33.07,
        30.40,
        22.23,
        16.47,
        9.86,
        2.98,
        2.25,
        6.79,
        22.97,
        24.55,
        27.72,
        24.02,
        22.54,
        14.85,
        15.44,
        18.96,
    ]

    print(stats.ttest_rel(a=a, b=b))

    get_stats(a, "cw_q2_2014")
    get_stats(b, "cw_q2_2023")


def cw_28():

    ## 2.8

    a = [
        13.78,
        18.81,
        16.96,
        31.55,
        33.00,
        31.28,
        25.45,
        35.93,
        40.84,
        39.33,
        38.83,
        34.66,
        40.75,
        39.69,
        26.53,
        12.53,
        31.75,
        26.66,
        26.91,
        24.35,
        1.59,
        28.46,
        30.03,
        34.21,
        38.81,
        39.05,
        44.99,
        38.19,
        55.89,
        55.61,
        54.85,
        65.47,
        63.58,
        38.35,
        39.98,
        44.97,
        33.45,
        33.94,
        28.77,
        35.69,
        34.82,
        30.49,
        33.96,
        4.02,
        4.84,
        12.03,
        37.58,
        12.66,
        28.27,
        48.73,
        56.46,
        37.99,
        39.25,
        63.45,
        53.07,
        41.29,
        42.15,
        47.63,
        32.84,
        36.27,
        33.97,
        22.92,
        9.54,
        31.76,
        19.93,
        6.36,
        2.09,
        5.72,
        17.49,
        34.84,
        39.67,
        32.52,
        41.43,
        42.68,
        39.60,
        35.79,
        41.78,
        35.60,
        20.03,
        19.96,
        26.81,
        21.81,
        23.36,
        0.00,
        5.09,
        8.59,
        22.99,
        27.31,
        13.43,
        12.38,
        29.58,
        21.64,
        21.05,
        18.77,
        22.43,
        18.43,
        33.07,
        6.70,
    ]

    b = [
        9.94,
        24.73,
        31.89,
        32.25,
        33.23,
        33.14,
        29.06,
        26.88,
        25.87,
        15.99,
        0.77,
        4.16,
        15.07,
        31.87,
        35.88,
        36.83,
        36.07,
        30.31,
        23.36,
        17.69,
        29.27,
        1.19,
        2.70,
        7.06,
        12.12,
        17.80,
        16.08,
        23.02,
        25.40,
        22.33,
        19.12,
        16.83,
        9.08,
        33.94,
        24.22,
        32.91,
        34.09,
        30.24,
        23.62,
        10.96,
        17.28,
        19.55,
        13.61,
        31.58,
        29.56,
        37.39,
        34.87,
        35.10,
        35.31,
        28.28,
        23.56,
        23.49,
        19.36,
        18.40,
        23.82,
        33.22,
        37.77,
        45.21,
        44.64,
        30.42,
        33.14,
        29.58,
        26.88,
        25.37,
        0.00,
        30.61,
        33.46,
        33.05,
        44.83,
        53.80,
        51.86,
        36.03,
        29.92,
        30.15,
        31.24,
        30.82,
        3.85,
        6.49,
        29.67,
        38.21,
        41.94,
        50.31,
        39.89,
        36.48,
        25.71,
        17.45,
        10.86,
        3.09,
        2.38,
        6.16,
        25.02,
        28.53,
        33.80,
        29.21,
        27.37,
        16.56,
        16.05,
        20.08,
    ]

    print(stats.ttest_rel(a=a, b=b))

    get_stats(a, "cw_q3_2014")
    get_stats(b, "cw_q3_2023")
